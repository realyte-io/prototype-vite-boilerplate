name: Develop CI/CD

on:
  push:
    branches:
      - develop

jobs:
  infrastructure:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Setup AWS Profile
        run: |
          mkdir -p ~/.aws
          echo "[default]" >> ~/.aws/credentials
          echo "aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
          echo "aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials
          echo "[profile default]" >> ~/.aws/config
          echo "region = us-east-1" >> ~/.aws/config

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        working-directory: ./infra
        run: terraform init

      - name: Select Terraform Workspace
        working-directory: ./infra
        run: terraform workspace select dev || terraform workspace new dev

      - name: Terraform Plan
        working-directory: ./infra
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: ./infra
        if: github.ref == 'refs/heads/develop'
        run: terraform apply -input=false tfplan

      - name: Capture Terraform Output
        id: tf_outputs
        working-directory: ./infra
        run: terraform output -json > terraform_outputs.json

      - name: Print terraform_outputs.json file
        working-directory: .
        run: cat ./infra/terraform_outputs.json

      - name: Generate .env file from Terraform output
        working-directory: .
        run: node ./scripts/generateEnvFromTerraformOutput.js

      - name: Print .env file
        run: cat ./apps/web/.env

  build:
    runs-on: ubuntu-latest
    needs: infrastructure

    strategy:
      matrix:
        node-version: [ 18.x ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: "https://npm.pkg.github.com/"
          scope: "@panocreation"
          auth-token: ${{ secrets.NODE_AUTH_TOKEN }}
          cache: 'npm'

      - name: Install dependencies
        run: npm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

      - name: Lint code
        run: npm run lint

      - name: Build project
        run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: [infrastructure, build]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Extract domain name
        id: extract_domain
        run: |
          domain_name=$(cat ./infra/terraform_outputs.json | grep -o '"domain_name":{[^}]*"value":"[^"]*"' | sed 's/.*"value":"\([^"]*\)".*/\1/')
          echo "DOMAIN_NAME=${domain_name}" >> $GITHUB_ENV

      - name: Sync S3 bucket
        run: |
          aws s3 sync ./apps/web/dist s3://$DOMAIN_NAME --delete
